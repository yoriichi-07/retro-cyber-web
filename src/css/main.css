/* Import component modules */
@import url('./components/crt.css');
@import url('./components/neon.css');
@import url('./components/matrix.css');
@import url('./components/animations.css');

/* Main Styles for Retro Cyber World Terminal */
/* Terminal interface, CRT effects, and cyberpunk aesthetics */

/* === MATRIX RAIN CANVAS === */
#matrix-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: var(--z-background);
    pointer-events: none;
    opacity: 0.6;
}

/* === MAIN CONTENT LAYOUT === */
#main-content {
    position: relative;
    z-index: var(--z-content);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-lg);
}

/* === TERMINAL CONTAINER === */
#terminal-container {
    width: 100%;
    max-width: 1000px;
    min-height: 600px;
    background-color: rgba(0, 0, 0, 0.8);
    border: 2px solid var(--color-text-primary);
    border-radius: var(--screen-curve);
    box-shadow: 
        inset 0 0 50px rgba(0, 240, 255, 0.1),
        0 0 30px rgba(0, 240, 255, 0.3);
    position: relative;
    overflow: hidden;
}

/* CRT Screen Curvature Effect */
#terminal-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
        ellipse at center,
        transparent 0%,
        transparent 70%,
        rgba(0, 0, 0, 0.3) 100%
    );
    pointer-events: none;
    z-index: var(--z-overlay);
}

/* Scanlines Effect */
#terminal-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        rgba(0, 0, 0, var(--scanline-opacity)),
        rgba(0, 0, 0, var(--scanline-opacity)) 1px,
        transparent 1px,
        transparent var(--scanline-spacing)
    );
    pointer-events: none;
    z-index: var(--z-overlay);
    animation: scanlines 0.1s linear infinite;
}

@keyframes scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(2px); }
}

/* === TERMINAL INTERFACE === */
#terminal {
    padding: var(--space-xl);
    height: 100%;
    min-height: 600px;
    display: flex;
    flex-direction: column;
    font-family: var(--font-primary);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    color: var(--color-text-primary);
    text-shadow: var(--shadow-text-glow);
}

/* === OUTPUT AREA === */
#output-area {
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    white-space: pre-wrap;
    word-wrap: break-word;
    margin-bottom: var(--space-lg);
    padding-right: var(--space-sm);
}

/* Custom Scrollbar */
#output-area::-webkit-scrollbar {
    width: 8px;
}

#output-area::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.3);
    border-radius: var(--radius-sm);
}

#output-area::-webkit-scrollbar-thumb {
    background: var(--color-accent-2);
    border-radius: var(--radius-sm);
    box-shadow: var(--shadow-glow-sm);
}

#output-area::-webkit-scrollbar-thumb:hover {
    background: var(--color-text-primary);
}

/* === INPUT AREA === */
#input-area {
    display: flex;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.2);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-sm);
    border: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: auto;
}

.prompt {
    color: var(--color-prompt);
    text-shadow: var(--shadow-text-glow);
    margin-right: var(--space-sm);
    font-weight: 700;
    white-space: nowrap;
}

#command-input {
    flex: 1;
    background: transparent;
    border: none;
    color: var(--color-input);
    font-family: var(--font-primary);
    font-size: var(--font-size-base);
    outline: none;
    text-shadow: var(--shadow-text-glow);
    caret-color: var(--color-accent-2);
}

#command-input::placeholder {
    color: var(--color-text-muted);
    opacity: 0.6;
    font-style: italic;
}

#command-input::selection {
    background-color: var(--color-selection);
}

/* === TERMINAL OUTPUT STYLING === */
.terminal-line {
    margin-bottom: var(--space-xs);
    line-height: var(--line-height-base);
}

.terminal-line.success {
    color: var(--color-success);
}

.terminal-line.error {
    color: var(--color-error);
}

.terminal-line.warning {
    color: var(--color-warning);
}

.terminal-line.info {
    color: var(--color-info);
}

.terminal-line.system {
    color: var(--color-text-muted);
    font-style: italic;
}

/* === TYPEWRITER EFFECT === */
.typing {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--color-accent-2);
    animation: blink-cursor 1s infinite;
}

@keyframes blink-cursor {
    0%, 50% { border-color: var(--color-accent-2); }
    51%, 100% { border-color: transparent; }
}

/* === GLITCH EFFECTS === */
.glitch {
    position: relative;
    animation: glitch-main 2s infinite linear alternate-reverse;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.glitch::before {
    left: 2px;
    text-shadow: -2px 0 var(--color-accent-1);
    clip-path: inset(44% 0 7% 0);
    animation: glitch-anim-1 2s infinite linear alternate-reverse;
}

.glitch::after {
    left: -2px;
    text-shadow: -2px 0 var(--color-accent-2);
    clip-path: inset(76% 0 21% 0);
    animation: glitch-anim-2 2.5s infinite linear alternate-reverse;
}

@keyframes glitch-main {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
    100% { transform: translate(0); }
}

@keyframes glitch-anim-1 {
    0% { clip-path: inset(40% 0 61% 0); }
    20% { clip-path: inset(92% 0 1% 0); }
    40% { clip-path: inset(43% 0 1% 0); }
    60% { clip-path: inset(25% 0 58% 0); }
    80% { clip-path: inset(54% 0 7% 0); }
    100% { clip-path: inset(58% 0 43% 0); }
}

@keyframes glitch-anim-2 {
    0% { clip-path: inset(25% 0 58% 0); }
    15% { clip-path: inset(6% 0 78% 0); }
    22% { clip-path: inset(71% 0 6% 0); }
    32% { clip-path: inset(17% 0 56% 0); }
    44% { clip-path: inset(40% 0 44% 0); }
    50% { clip-path: inset(91% 0 6% 0); }
    60% { clip-path: inset(70% 0 15% 0); }
    72% { clip-path: inset(6% 0 78% 0); }
    84% { clip-path: inset(30% 0 35% 0); }
    95% { clip-path: inset(15% 0 78% 0); }
    100% { clip-path: inset(25% 0 58% 0); }
}

/* === GLOW EFFECTS === */
.neon-glow {
    text-shadow: var(--shadow-glow-lg);
}

.neon-border {
    border: 1px solid currentColor;
    box-shadow: 
        inset 0 0 10px currentColor,
        0 0 10px currentColor,
        0 0 20px currentColor;
}

/* === ASCII ART STYLING === */
.ascii-art {
    font-family: var(--font-retro);
    font-size: var(--font-size-small);
    line-height: 1;
    color: var(--color-accent-2);
    text-shadow: var(--shadow-text-glow);
    white-space: pre;
    letter-spacing: 0;
}

/* === RESPONSIVE DESIGN === */
@media (max-width: 768px) {
    #main-content {
        padding: var(--space-md);
    }
    
    #terminal-container {
        min-height: 500px;
        border-radius: var(--radius-md);
    }
    
    #terminal {
        padding: var(--space-lg);
        font-size: var(--font-size-small);
    }
    
    .prompt {
        font-size: var(--font-size-small);
    }
    
    #command-input {
        font-size: 16px; /* Prevent zoom on iOS */
    }
}

@media (max-width: 480px) {
    #main-content {
        padding: var(--space-sm);
    }
    
    #terminal-container {
        min-height: 400px;
    }
    
    #terminal {
        padding: var(--space-md);
    }
    
    .ascii-art {
        font-size: 0.7rem;
    }
}

/* === NOSCRIPT FALLBACK === */
.noscript-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-bg-primary);
    border: 2px solid var(--color-error);
    padding: var(--space-xl);
    border-radius: var(--radius-lg);
    text-align: center;
    max-width: 500px;
    z-index: var(--z-modal);
}

.noscript-message h1 {
    color: var(--color-error);
    margin-bottom: var(--space-md);
}

.noscript-message p {
    color: var(--color-text-secondary);
    line-height: var(--line-height-base);
}

/* === ACCESSIBILITY ENHANCEMENTS === */
@media (prefers-reduced-motion: reduce) {
    #terminal-container::after {
        animation: none;
    }
    
    .glitch,
    .glitch::before,
    .glitch::after {
        animation: none;
    }
    
    .typing {
        animation: none;
        border-right: none;
    }
}

/* === HIGH CONTRAST MODE === */
@media (prefers-contrast: high) {
    #terminal-container {
        border-color: #ffffff;
        box-shadow: none;
    }
    
    #terminal-container::before,
    #terminal-container::after {
        display: none;
    }
    
    .neon-glow,
    .neon-border {
        text-shadow: none;
        box-shadow: none;
    }
}